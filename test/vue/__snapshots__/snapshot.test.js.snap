// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rules snapshot 1`] = `
Object {
  "env": Object {
    "browser": true,
    "es6": true,
    "jest": true,
    "node": true,
  },
  "globals": Object {
    "__CLIENT__": true,
    "__DEBUG__": true,
    "__DEVELOPMENT__": true,
    "__DEVTOOLS__": true,
    "__SERVER__": true,
  },
  "ignorePatterns": Array [],
  "noInlineConfig": undefined,
  "parserOptions": Object {
    "allowImportExportEverywhere": false,
    "ecmaFeatures": Object {
      "generators": false,
      "globalReturn": true,
      "impliedStrict": true,
      "objectLiteralDuplicateProperties": false,
    },
    "ecmaVersion": 2018,
    "parser": "babel-eslint",
    "requireConfigFile": false,
    "sourceType": "module",
  },
  "plugins": Array [
    "import",
    "babel",
    "vue",
  ],
  "reportUnusedDisableDirectives": undefined,
  "rules": Object {
    "accessor-pairs": Array [
      "off",
    ],
    "array-bracket-newline": Array [
      "off",
      "consistent",
    ],
    "array-bracket-spacing": Array [
      "error",
      "never",
    ],
    "array-callback-return": Array [
      "error",
      Object {
        "allowImplicit": true,
        "checkForEach": false,
      },
    ],
    "array-element-newline": Array [
      "off",
      Object {
        "minItems": 3,
        "multiline": true,
      },
    ],
    "arrow-body-style": Array [
      "off",
      "as-needed",
      Object {
        "requireReturnForObjectLiteral": false,
      },
    ],
    "arrow-parens": Array [
      "error",
      "always",
    ],
    "arrow-spacing": Array [
      "error",
      Object {
        "after": true,
        "before": true,
      },
    ],
    "babel/semi": Array [
      "error",
      "always",
    ],
    "block-scoped-var": Array [
      "error",
    ],
    "block-spacing": Array [
      "error",
      "always",
    ],
    "brace-style": Array [
      "error",
      "1tbs",
      Object {
        "allowSingleLine": true,
      },
    ],
    "callback-return": Array [
      "off",
    ],
    "camelcase": Array [
      "error",
      Object {
        "ignoreDestructuring": false,
        "ignoreImports": false,
        "properties": "never",
      },
    ],
    "capitalized-comments": Array [
      "off",
      "never",
      Object {
        "block": Object {
          "ignoreConsecutiveComments": true,
          "ignoreInlineComments": true,
          "ignorePattern": ".*",
        },
        "line": Object {
          "ignoreConsecutiveComments": true,
          "ignoreInlineComments": true,
          "ignorePattern": ".*",
        },
      },
    ],
    "class-methods-use-this": Array [
      "error",
      Object {
        "exceptMethods": Array [],
      },
    ],
    "comma-dangle": Array [
      "error",
      Object {
        "arrays": "always-multiline",
        "exports": "always-multiline",
        "functions": "always-multiline",
        "imports": "always-multiline",
        "objects": "always-multiline",
      },
    ],
    "comma-spacing": Array [
      "error",
      Object {
        "after": true,
        "before": false,
      },
    ],
    "comma-style": Array [
      "error",
      "last",
      Object {
        "exceptions": Object {
          "ArrayExpression": false,
          "ArrayPattern": false,
          "ArrowFunctionExpression": false,
          "CallExpression": false,
          "FunctionDeclaration": false,
          "FunctionExpression": false,
          "ImportDeclaration": false,
          "NewExpression": false,
          "ObjectExpression": false,
          "ObjectPattern": false,
          "VariableDeclaration": false,
        },
      },
    ],
    "complexity": Array [
      "off",
      11,
    ],
    "computed-property-spacing": Array [
      "error",
      "never",
    ],
    "consistent-return": Array [
      "off",
    ],
    "consistent-this": Array [
      "off",
    ],
    "constructor-super": Array [
      "error",
    ],
    "curly": Array [
      "error",
      "multi-line",
    ],
    "default-case": Array [
      "off",
      Object {
        "commentPattern": "^no default$",
      },
    ],
    "default-case-last": Array [
      "off",
    ],
    "default-param-last": Array [
      "off",
    ],
    "dot-location": Array [
      "error",
      "property",
    ],
    "dot-notation": Array [
      "error",
      Object {
        "allowKeywords": true,
        "allowPattern": "",
      },
    ],
    "eol-last": Array [
      "error",
      "always",
    ],
    "eqeqeq": Array [
      "warn",
      "always",
      Object {
        "null": "ignore",
      },
    ],
    "for-direction": Array [
      "error",
    ],
    "func-call-spacing": Array [
      "error",
      "never",
    ],
    "func-name-matching": Array [
      "off",
      "always",
      Object {
        "considerPropertyDescriptor": true,
        "includeCommonJSModuleExports": false,
      },
    ],
    "func-names": Array [
      "error",
      "as-needed",
    ],
    "func-style": Array [
      "off",
      "expression",
    ],
    "function-call-argument-newline": Array [
      "off",
      "consistent",
    ],
    "function-paren-newline": Array [
      "error",
      "consistent",
    ],
    "generator-star-spacing": Array [
      "error",
      Object {
        "after": true,
        "before": false,
      },
    ],
    "getter-return": Array [
      "error",
      Object {
        "allowImplicit": true,
      },
    ],
    "global-require": Array [
      "off",
    ],
    "grouped-accessor-pairs": Array [
      "off",
    ],
    "guard-for-in": Array [
      "error",
    ],
    "handle-callback-err": Array [
      "off",
    ],
    "id-blacklist": Array [
      "off",
    ],
    "id-length": Array [
      "off",
    ],
    "id-match": Array [
      "off",
    ],
    "implicit-arrow-linebreak": Array [
      "error",
      "beside",
    ],
    "import/default": Array [
      "off",
    ],
    "import/dynamic-import-chunkname": Array [
      "off",
      Object {
        "importFunctions": Array [],
        "webpackChunknameFormat": "[0-9a-zA-Z-_/.]+",
      },
    ],
    "import/export": Array [
      "error",
    ],
    "import/exports-last": Array [
      "off",
    ],
    "import/extensions": Array [
      "off",
      "ignorePackages",
      Object {
        "js": "never",
        "jsx": "never",
        "mjs": "never",
      },
    ],
    "import/first": Array [
      "error",
    ],
    "import/group-exports": Array [
      "off",
    ],
    "import/imports-first": Array [
      "off",
    ],
    "import/max-dependencies": Array [
      "off",
      Object {
        "max": 10,
      },
    ],
    "import/named": Array [
      "error",
    ],
    "import/namespace": Array [
      "off",
    ],
    "import/newline-after-import": Array [
      "error",
    ],
    "import/no-absolute-path": Array [
      "error",
    ],
    "import/no-amd": Array [
      "error",
    ],
    "import/no-anonymous-default-export": Array [
      "off",
      Object {
        "allowAnonymousClass": false,
        "allowAnonymousFunction": false,
        "allowArray": false,
        "allowArrowFunction": false,
        "allowLiteral": false,
        "allowObject": false,
      },
    ],
    "import/no-commonjs": Array [
      "off",
    ],
    "import/no-cycle": Array [
      "error",
      Object {
        "ignoreExternal": false,
        "maxDepth": Infinity,
      },
    ],
    "import/no-default-export": Array [
      "off",
    ],
    "import/no-deprecated": Array [
      "off",
    ],
    "import/no-duplicates": Array [
      "error",
    ],
    "import/no-dynamic-require": Array [
      "error",
    ],
    "import/no-extraneous-dependencies": Array [
      "off",
      Object {
        "devDependencies": Array [
          "test/**",
          "tests/**",
          "spec/**",
          "**/__tests__/**",
          "**/__mocks__/**",
          "test.{js,jsx}",
          "test-*.{js,jsx}",
          "**/*{.,_}{test,spec}.{js,jsx}",
          "**/jest.config.js",
          "**/jest.setup.js",
          "**/vue.config.js",
          "**/webpack.config.js",
          "**/webpack.config.*.js",
          "**/rollup.config.js",
          "**/rollup.config.*.js",
          "**/gulpfile.js",
          "**/gulpfile.*.js",
          "**/Gruntfile{,.js}",
          "**/protractor.conf.js",
          "**/protractor.conf.*.js",
          "**/karma.conf.js",
        ],
        "optionalDependencies": false,
      },
    ],
    "import/no-internal-modules": Array [
      "off",
      Object {
        "allow": Array [],
      },
    ],
    "import/no-mutable-exports": Array [
      "error",
    ],
    "import/no-named-as-default": Array [
      "error",
    ],
    "import/no-named-as-default-member": Array [
      "error",
    ],
    "import/no-named-default": Array [
      "error",
    ],
    "import/no-named-export": Array [
      "off",
    ],
    "import/no-namespace": Array [
      "off",
    ],
    "import/no-nodejs-modules": Array [
      "off",
    ],
    "import/no-relative-parent-imports": Array [
      "off",
    ],
    "import/no-restricted-paths": Array [
      "off",
    ],
    "import/no-self-import": Array [
      "error",
    ],
    "import/no-unassigned-import": Array [
      "off",
    ],
    "import/no-unresolved": Array [
      "off",
      Object {
        "caseSensitive": true,
        "commonjs": true,
      },
    ],
    "import/no-unused-modules": Array [
      "off",
      Object {
        "ignoreExports": Array [],
        "missingExports": true,
        "unusedExports": true,
      },
    ],
    "import/no-useless-path-segments": Array [
      "error",
      Object {
        "commonjs": true,
      },
    ],
    "import/no-webpack-loader-syntax": Array [
      "error",
    ],
    "import/order": Array [
      "error",
      Object {
        "groups": Array [
          Array [
            "builtin",
            "external",
            "internal",
          ],
        ],
      },
    ],
    "import/prefer-default-export": Array [
      "warn",
    ],
    "import/unambiguous": Array [
      "off",
    ],
    "indent": Array [
      "error",
      2,
      Object {
        "ArrayExpression": 1,
        "CallExpression": Object {
          "arguments": 1,
        },
        "FunctionDeclaration": Object {
          "body": 1,
          "parameters": 1,
        },
        "FunctionExpression": Object {
          "body": 1,
          "parameters": 1,
        },
        "ImportDeclaration": 1,
        "ObjectExpression": 1,
        "SwitchCase": 1,
        "VariableDeclarator": 1,
        "flatTernaryExpressions": false,
        "ignoreComments": false,
        "ignoredNodes": Array [
          "JSXElement",
          "JSXElement > *",
          "JSXAttribute",
          "JSXIdentifier",
          "JSXNamespacedName",
          "JSXMemberExpression",
          "JSXSpreadAttribute",
          "JSXExpressionContainer",
          "JSXOpeningElement",
          "JSXClosingElement",
          "JSXFragment",
          "JSXOpeningFragment",
          "JSXClosingFragment",
          "JSXText",
          "JSXEmptyExpression",
          "JSXSpreadChild",
        ],
        "offsetTernaryExpressions": false,
        "outerIIFEBody": 1,
      },
    ],
    "init-declarations": Array [
      "off",
    ],
    "jsx-quotes": Array [
      "off",
      "prefer-double",
    ],
    "key-spacing": Array [
      "error",
      Object {
        "afterColon": true,
        "beforeColon": false,
      },
    ],
    "keyword-spacing": Array [
      "error",
      Object {
        "after": true,
        "before": true,
        "overrides": Object {
          "case": Object {
            "after": true,
          },
          "return": Object {
            "after": true,
          },
          "throw": Object {
            "after": true,
          },
        },
      },
    ],
    "line-comment-position": Array [
      "off",
      Object {
        "applyDefaultPatterns": true,
        "ignorePattern": "",
        "position": "above",
      },
    ],
    "linebreak-style": Array [
      "off",
      "unix",
    ],
    "lines-around-comment": Array [
      "off",
    ],
    "lines-around-directive": Array [
      "error",
      Object {
        "after": "always",
        "before": "always",
      },
    ],
    "lines-between-class-members": Array [
      "error",
      "always",
      Object {
        "exceptAfterSingleLine": false,
      },
    ],
    "max-classes-per-file": Array [
      "error",
      1,
    ],
    "max-depth": Array [
      "off",
      4,
    ],
    "max-len": Array [
      "off",
      100,
      2,
      Object {
        "ignoreComments": false,
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true,
      },
    ],
    "max-lines": Array [
      "off",
      Object {
        "max": 300,
        "skipBlankLines": true,
        "skipComments": true,
      },
    ],
    "max-lines-per-function": Array [
      "off",
      Object {
        "IIFEs": true,
        "max": 50,
        "skipBlankLines": true,
        "skipComments": true,
      },
    ],
    "max-nested-callbacks": Array [
      "off",
    ],
    "max-params": Array [
      "off",
      3,
    ],
    "max-statements": Array [
      "off",
      10,
    ],
    "max-statements-per-line": Array [
      "off",
      Object {
        "max": 1,
      },
    ],
    "multiline-comment-style": Array [
      "off",
      "starred-block",
    ],
    "multiline-ternary": Array [
      "error",
      "always-multiline",
    ],
    "new-cap": Array [
      "error",
      Object {
        "capIsNew": false,
        "capIsNewExceptions": Array [
          "Immutable.Map",
          "Immutable.Set",
          "Immutable.List",
        ],
        "newIsCap": true,
        "newIsCapExceptions": Array [],
        "properties": true,
      },
    ],
    "new-parens": Array [
      "error",
    ],
    "newline-after-var": Array [
      "off",
    ],
    "newline-before-return": Array [
      "off",
    ],
    "newline-per-chained-call": Array [
      "error",
      Object {
        "ignoreChainWithDepth": 4,
      },
    ],
    "no-alert": Array [
      "warn",
    ],
    "no-array-constructor": Array [
      "error",
    ],
    "no-async-promise-executor": Array [
      "error",
    ],
    "no-await-in-loop": Array [
      "error",
    ],
    "no-bitwise": Array [
      "error",
      Object {
        "allow": Array [
          "~",
        ],
        "int32Hint": false,
      },
    ],
    "no-buffer-constructor": Array [
      "error",
    ],
    "no-caller": Array [
      "error",
    ],
    "no-case-declarations": Array [
      "error",
    ],
    "no-catch-shadow": Array [
      "off",
    ],
    "no-class-assign": Array [
      "error",
    ],
    "no-compare-neg-zero": Array [
      "error",
    ],
    "no-cond-assign": Array [
      "error",
      "always",
    ],
    "no-confusing-arrow": Array [
      "error",
      Object {
        "allowParens": true,
      },
    ],
    "no-console": Array [
      "warn",
      Object {
        "allow": Array [
          "debug",
          "info",
          "warn",
          "error",
        ],
      },
    ],
    "no-const-assign": Array [
      "error",
    ],
    "no-constant-condition": Array [
      "warn",
    ],
    "no-constructor-return": Array [
      "off",
    ],
    "no-continue": Array [
      "error",
    ],
    "no-control-regex": Array [
      "error",
    ],
    "no-debugger": Array [
      "error",
    ],
    "no-delete-var": Array [
      "error",
    ],
    "no-div-regex": Array [
      "off",
    ],
    "no-dupe-args": Array [
      "error",
    ],
    "no-dupe-class-members": Array [
      "error",
    ],
    "no-dupe-else-if": Array [
      "off",
    ],
    "no-dupe-keys": Array [
      "error",
    ],
    "no-duplicate-case": Array [
      "error",
    ],
    "no-duplicate-imports": Array [
      "off",
    ],
    "no-else-return": Array [
      "error",
      Object {
        "allowElseIf": false,
      },
    ],
    "no-empty": Array [
      "error",
    ],
    "no-empty-character-class": Array [
      "error",
    ],
    "no-empty-function": Array [
      "error",
      Object {
        "allow": Array [
          "arrowFunctions",
          "functions",
          "methods",
        ],
      },
    ],
    "no-empty-pattern": Array [
      "error",
    ],
    "no-eq-null": Array [
      "off",
    ],
    "no-eval": Array [
      "error",
    ],
    "no-ex-assign": Array [
      "error",
    ],
    "no-extend-native": Array [
      "error",
    ],
    "no-extra-bind": Array [
      "error",
    ],
    "no-extra-boolean-cast": Array [
      "error",
    ],
    "no-extra-label": Array [
      "error",
    ],
    "no-extra-parens": Array [
      "off",
      "all",
      Object {
        "conditionalAssign": true,
        "enforceForArrowConditionals": false,
        "ignoreJSX": "all",
        "nestedBinaryExpressions": false,
        "returnAssign": false,
      },
    ],
    "no-extra-semi": Array [
      "error",
    ],
    "no-fallthrough": Array [
      "error",
    ],
    "no-floating-decimal": Array [
      "error",
    ],
    "no-func-assign": Array [
      "error",
    ],
    "no-global-assign": Array [
      "error",
      Object {
        "exceptions": Array [],
      },
    ],
    "no-implicit-coercion": Array [
      "off",
      Object {
        "allow": Array [],
        "boolean": false,
        "number": true,
        "string": true,
      },
    ],
    "no-implicit-globals": Array [
      "off",
    ],
    "no-implied-eval": Array [
      "error",
    ],
    "no-import-assign": Array [
      "off",
    ],
    "no-inline-comments": Array [
      "off",
    ],
    "no-inner-declarations": Array [
      "error",
    ],
    "no-invalid-regexp": Array [
      "error",
    ],
    "no-invalid-this": Array [
      "off",
    ],
    "no-irregular-whitespace": Array [
      "error",
    ],
    "no-iterator": Array [
      "error",
    ],
    "no-label-var": Array [
      "error",
    ],
    "no-labels": Array [
      "error",
      Object {
        "allowLoop": false,
        "allowSwitch": false,
      },
    ],
    "no-lone-blocks": Array [
      "error",
    ],
    "no-lonely-if": Array [
      "error",
    ],
    "no-loop-func": Array [
      "error",
    ],
    "no-loss-of-precision": Array [
      "off",
    ],
    "no-magic-numbers": Array [
      "off",
      Object {
        "detectObjects": false,
        "enforceConst": true,
        "ignore": Array [],
        "ignoreArrayIndexes": true,
      },
    ],
    "no-misleading-character-class": Array [
      "error",
    ],
    "no-mixed-operators": Array [
      "error",
      Object {
        "allowSamePrecedence": false,
        "groups": Array [
          Array [
            "%",
            "**",
          ],
          Array [
            "%",
            "+",
          ],
          Array [
            "%",
            "-",
          ],
          Array [
            "%",
            "*",
          ],
          Array [
            "%",
            "/",
          ],
          Array [
            "/",
            "*",
          ],
          Array [
            "&",
            "|",
            "<<",
            ">>",
            ">>>",
          ],
          Array [
            "==",
            "!=",
            "===",
            "!==",
          ],
          Array [
            "&&",
            "||",
          ],
        ],
      },
    ],
    "no-mixed-requires": Array [
      "off",
      false,
    ],
    "no-mixed-spaces-and-tabs": Array [
      "error",
    ],
    "no-multi-assign": Array [
      "off",
    ],
    "no-multi-spaces": Array [
      "error",
      Object {
        "ignoreEOLComments": true,
      },
    ],
    "no-multi-str": Array [
      "error",
    ],
    "no-multiple-empty-lines": Array [
      "error",
      Object {
        "max": 1,
        "maxBOF": 0,
        "maxEOF": 0,
      },
    ],
    "no-native-reassign": Array [
      "off",
    ],
    "no-negated-condition": Array [
      "off",
    ],
    "no-negated-in-lhs": Array [
      "off",
    ],
    "no-nested-ternary": Array [
      "error",
    ],
    "no-new": Array [
      "error",
    ],
    "no-new-func": Array [
      "error",
    ],
    "no-new-object": Array [
      "error",
    ],
    "no-new-require": Array [
      "error",
    ],
    "no-new-symbol": Array [
      "error",
    ],
    "no-new-wrappers": Array [
      "error",
    ],
    "no-obj-calls": Array [
      "error",
    ],
    "no-octal": Array [
      "error",
    ],
    "no-octal-escape": Array [
      "error",
    ],
    "no-param-reassign": Array [
      "off",
      Object {
        "ignorePropertyModificationsFor": Array [
          "acc",
          "accumulator",
          "e",
          "ctx",
          "context",
          "req",
          "request",
          "res",
          "response",
          "$scope",
          "staticContext",
        ],
        "props": true,
      },
    ],
    "no-path-concat": Array [
      "error",
    ],
    "no-plusplus": Array [
      "error",
      Object {
        "allowForLoopAfterthoughts": true,
      },
    ],
    "no-process-env": Array [
      "off",
    ],
    "no-process-exit": Array [
      "off",
    ],
    "no-proto": Array [
      "error",
    ],
    "no-prototype-builtins": Array [
      "error",
    ],
    "no-redeclare": Array [
      "error",
    ],
    "no-regex-spaces": Array [
      "error",
    ],
    "no-restricted-exports": Array [
      "off",
      Object {
        "restrictedNamedExports": Array [
          "default",
          "then",
        ],
      },
    ],
    "no-restricted-globals": Array [
      "error",
      "isFinite",
      "isNaN",
      "addEventListener",
      "blur",
      "close",
      "closed",
      "confirm",
      "defaultStatus",
      "defaultstatus",
      "event",
      "external",
      "find",
      "focus",
      "frameElement",
      "frames",
      "history",
      "innerHeight",
      "innerWidth",
      "length",
      "location",
      "locationbar",
      "menubar",
      "moveBy",
      "moveTo",
      "name",
      "onblur",
      "onerror",
      "onfocus",
      "onload",
      "onresize",
      "onunload",
      "open",
      "opener",
      "opera",
      "outerHeight",
      "outerWidth",
      "pageXOffset",
      "pageYOffset",
      "parent",
      "print",
      "removeEventListener",
      "resizeBy",
      "resizeTo",
      "screen",
      "screenLeft",
      "screenTop",
      "screenX",
      "screenY",
      "scroll",
      "scrollbars",
      "scrollBy",
      "scrollTo",
      "scrollX",
      "scrollY",
      "self",
      "status",
      "statusbar",
      "stop",
      "toolbar",
      "top",
    ],
    "no-restricted-imports": Array [
      "off",
      Object {
        "paths": Array [],
        "patterns": Array [],
      },
    ],
    "no-restricted-modules": Array [
      "off",
    ],
    "no-restricted-properties": Array [
      "error",
      Object {
        "message": "arguments.callee is deprecated",
        "object": "arguments",
        "property": "callee",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "global",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "self",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "window",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "global",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "self",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "window",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineGetter__",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineSetter__",
      },
      Object {
        "message": "Use the exponentiation operator (**) instead.",
        "object": "Math",
        "property": "pow",
      },
    ],
    "no-restricted-syntax": Array [
      "error",
      Object {
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.",
        "selector": "ForInStatement",
      },
      Object {
        "message": "iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.",
        "selector": "ForOfStatement",
      },
      Object {
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand.",
        "selector": "LabeledStatement",
      },
      Object {
        "message": "\`with\` is disallowed in strict mode because it makes code impossible to predict and optimize.",
        "selector": "WithStatement",
      },
    ],
    "no-return-assign": Array [
      "error",
      "always",
    ],
    "no-return-await": Array [
      "error",
    ],
    "no-script-url": Array [
      "error",
    ],
    "no-self-assign": Array [
      "error",
      Object {
        "props": true,
      },
    ],
    "no-self-compare": Array [
      "error",
    ],
    "no-sequences": Array [
      "error",
    ],
    "no-setter-return": Array [
      "off",
    ],
    "no-shadow": Array [
      "error",
    ],
    "no-shadow-restricted-names": Array [
      "error",
    ],
    "no-spaced-func": Array [
      "error",
    ],
    "no-sparse-arrays": Array [
      "error",
    ],
    "no-sync": Array [
      "off",
    ],
    "no-tabs": Array [
      "error",
    ],
    "no-template-curly-in-string": Array [
      "error",
    ],
    "no-ternary": Array [
      "off",
    ],
    "no-this-before-super": Array [
      "error",
    ],
    "no-throw-literal": Array [
      "error",
    ],
    "no-trailing-spaces": Array [
      "error",
      Object {
        "ignoreComments": false,
        "skipBlankLines": false,
      },
    ],
    "no-undef": Array [
      "error",
    ],
    "no-undef-init": Array [
      "error",
    ],
    "no-undefined": Array [
      "off",
    ],
    "no-underscore-dangle": Array [
      "off",
      Object {
        "allow": Array [],
        "allowAfterSuper": false,
        "allowAfterThis": false,
        "allowAfterThisConstructor": false,
        "enforceInMethodNames": true,
      },
    ],
    "no-unexpected-multiline": Array [
      "error",
    ],
    "no-unmodified-loop-condition": Array [
      "off",
    ],
    "no-unneeded-ternary": Array [
      "error",
      Object {
        "defaultAssignment": false,
      },
    ],
    "no-unreachable": Array [
      "error",
    ],
    "no-unsafe-finally": Array [
      "error",
    ],
    "no-unsafe-negation": Array [
      "error",
    ],
    "no-unused-expressions": Array [
      "error",
      Object {
        "allowShortCircuit": true,
        "allowTaggedTemplates": true,
        "allowTernary": true,
      },
    ],
    "no-unused-labels": Array [
      "error",
    ],
    "no-unused-vars": Array [
      "warn",
      Object {
        "args": "after-used",
        "caughtErrors": "none",
        "ignoreRestSiblings": true,
        "vars": "all",
      },
    ],
    "no-use-before-define": Array [
      "error",
      Object {
        "classes": true,
        "functions": true,
        "variables": true,
      },
    ],
    "no-useless-backreference": Array [
      "off",
    ],
    "no-useless-call": Array [
      "off",
    ],
    "no-useless-catch": Array [
      "error",
    ],
    "no-useless-computed-key": Array [
      "error",
    ],
    "no-useless-concat": Array [
      "error",
    ],
    "no-useless-constructor": Array [
      "error",
    ],
    "no-useless-escape": Array [
      "error",
    ],
    "no-useless-rename": Array [
      "error",
      Object {
        "ignoreDestructuring": false,
        "ignoreExport": false,
        "ignoreImport": false,
      },
    ],
    "no-useless-return": Array [
      "error",
    ],
    "no-var": Array [
      "error",
    ],
    "no-void": Array [
      "error",
    ],
    "no-warning-comments": Array [
      "off",
      Object {
        "location": "start",
        "terms": Array [
          "todo",
          "fixme",
          "xxx",
        ],
      },
    ],
    "no-whitespace-before-property": Array [
      "error",
    ],
    "no-with": Array [
      "error",
    ],
    "nonblock-statement-body-position": Array [
      "error",
      "beside",
      Object {
        "overrides": Object {},
      },
    ],
    "object-curly-newline": Array [
      "error",
      Object {
        "consistent": true,
        "multiline": true,
      },
    ],
    "object-curly-spacing": Array [
      "error",
      "always",
    ],
    "object-property-newline": Array [
      "error",
      Object {
        "allowAllPropertiesOnSameLine": true,
        "allowMultiplePropertiesPerLine": false,
      },
    ],
    "object-shorthand": Array [
      "error",
      "always",
      Object {
        "avoidQuotes": true,
        "ignoreConstructors": false,
      },
    ],
    "one-var": Array [
      "error",
      "never",
    ],
    "one-var-declaration-per-line": Array [
      "error",
      "always",
    ],
    "operator-assignment": Array [
      "error",
      "always",
    ],
    "operator-linebreak": Array [
      "error",
      "before",
      Object {
        "overrides": Object {
          "=": "none",
        },
      },
    ],
    "padded-blocks": Array [
      "error",
      Object {
        "blocks": "never",
        "classes": "never",
        "switches": "never",
      },
      Object {
        "allowSingleLineBlocks": true,
      },
    ],
    "padding-line-between-statements": Array [
      "off",
    ],
    "prefer-arrow-callback": Array [
      "warn",
      Object {
        "allowNamedFunctions": false,
        "allowUnboundThis": true,
      },
    ],
    "prefer-const": Array [
      "error",
      Object {
        "destructuring": "any",
        "ignoreReadBeforeAssign": true,
      },
    ],
    "prefer-destructuring": Array [
      "error",
      Object {
        "AssignmentExpression": Object {
          "array": true,
          "object": false,
        },
        "VariableDeclarator": Object {
          "array": false,
          "object": true,
        },
      },
      Object {
        "enforceForRenamedProperties": false,
      },
    ],
    "prefer-exponentiation-operator": Array [
      "off",
    ],
    "prefer-named-capture-group": Array [
      "off",
    ],
    "prefer-numeric-literals": Array [
      "error",
    ],
    "prefer-object-spread": Array [
      "error",
    ],
    "prefer-promise-reject-errors": Array [
      "error",
      Object {
        "allowEmptyReject": true,
      },
    ],
    "prefer-reflect": Array [
      "off",
    ],
    "prefer-regex-literals": Array [
      "off",
    ],
    "prefer-rest-params": Array [
      "error",
    ],
    "prefer-spread": Array [
      "error",
    ],
    "prefer-template": Array [
      "error",
    ],
    "quote-props": Array [
      "error",
      "as-needed",
      Object {
        "keywords": false,
        "numbers": false,
        "unnecessary": true,
      },
    ],
    "quotes": Array [
      "error",
      "single",
      Object {
        "avoidEscape": true,
      },
    ],
    "radix": Array [
      "error",
    ],
    "require-atomic-updates": Array [
      "off",
    ],
    "require-await": Array [
      "off",
    ],
    "require-jsdoc": Array [
      "off",
    ],
    "require-unicode-regexp": Array [
      "off",
    ],
    "require-yield": Array [
      "error",
    ],
    "rest-spread-spacing": Array [
      "error",
      "never",
    ],
    "semi": Array [
      "off",
      "always",
    ],
    "semi-spacing": Array [
      "error",
      Object {
        "after": true,
        "before": false,
      },
    ],
    "semi-style": Array [
      "error",
      "last",
    ],
    "sort-imports": Array [
      "off",
      Object {
        "ignoreCase": false,
        "ignoreDeclarationSort": false,
        "ignoreMemberSort": false,
        "memberSyntaxSortOrder": Array [
          "none",
          "all",
          "multiple",
          "single",
        ],
      },
    ],
    "sort-keys": Array [
      "off",
      "asc",
      Object {
        "caseSensitive": false,
        "natural": true,
      },
    ],
    "sort-vars": Array [
      "off",
    ],
    "space-before-blocks": Array [
      "error",
    ],
    "space-before-function-paren": Array [
      "error",
      Object {
        "anonymous": "always",
        "asyncArrow": "always",
        "named": "never",
      },
    ],
    "space-in-parens": Array [
      "error",
      "never",
    ],
    "space-infix-ops": Array [
      "error",
    ],
    "space-unary-ops": Array [
      "error",
      Object {
        "nonwords": false,
        "overrides": Object {},
        "words": true,
      },
    ],
    "spaced-comment": Array [
      "error",
      "always",
      Object {
        "block": Object {
          "balanced": true,
          "exceptions": Array [
            "-",
            "+",
          ],
          "markers": Array [
            "=",
            "!",
            ":",
            "::",
          ],
        },
        "line": Object {
          "exceptions": Array [
            "-",
            "+",
          ],
          "markers": Array [
            "=",
            "!",
            "/",
          ],
        },
      },
    ],
    "strict": Array [
      "error",
      "never",
    ],
    "switch-colon-spacing": Array [
      "error",
      Object {
        "after": true,
        "before": false,
      },
    ],
    "symbol-description": Array [
      "error",
    ],
    "template-curly-spacing": Array [
      "error",
    ],
    "template-tag-spacing": Array [
      "error",
      "never",
    ],
    "unicode-bom": Array [
      "error",
      "never",
    ],
    "use-isnan": Array [
      "error",
    ],
    "valid-jsdoc": Array [
      "off",
    ],
    "valid-typeof": Array [
      "error",
      Object {
        "requireStringLiterals": true,
      },
    ],
    "vars-on-top": Array [
      "error",
    ],
    "vue/comment-directive": Array [
      "error",
    ],
    "vue/jsx-uses-vars": Array [
      "error",
    ],
    "vue/no-async-in-computed-properties": Array [
      "error",
    ],
    "vue/no-dupe-keys": Array [
      "error",
    ],
    "vue/no-duplicate-attributes": Array [
      "error",
    ],
    "vue/no-parsing-error": Array [
      "error",
    ],
    "vue/no-reserved-keys": Array [
      "error",
    ],
    "vue/no-shared-component-data": Array [
      "error",
    ],
    "vue/no-side-effects-in-computed-properties": Array [
      "error",
    ],
    "vue/no-template-key": Array [
      "error",
    ],
    "vue/no-textarea-mustache": Array [
      "error",
    ],
    "vue/no-unused-components": Array [
      "error",
    ],
    "vue/no-unused-vars": Array [
      "error",
    ],
    "vue/no-use-v-if-with-v-for": Array [
      "error",
    ],
    "vue/require-component-is": Array [
      "error",
    ],
    "vue/require-prop-type-constructor": Array [
      "error",
    ],
    "vue/require-render-return": Array [
      "error",
    ],
    "vue/require-v-for-key": Array [
      "error",
    ],
    "vue/require-valid-default-prop": Array [
      "error",
    ],
    "vue/return-in-computed-property": Array [
      "error",
    ],
    "vue/use-v-on-exact": Array [
      "error",
    ],
    "vue/valid-template-root": Array [
      "error",
    ],
    "vue/valid-v-bind": Array [
      "error",
    ],
    "vue/valid-v-cloak": Array [
      "error",
    ],
    "vue/valid-v-else": Array [
      "error",
    ],
    "vue/valid-v-else-if": Array [
      "error",
    ],
    "vue/valid-v-for": Array [
      "error",
    ],
    "vue/valid-v-html": Array [
      "error",
    ],
    "vue/valid-v-if": Array [
      "error",
    ],
    "vue/valid-v-model": Array [
      "error",
    ],
    "vue/valid-v-on": Array [
      "error",
    ],
    "vue/valid-v-once": Array [
      "error",
    ],
    "vue/valid-v-pre": Array [
      "error",
    ],
    "vue/valid-v-show": Array [
      "error",
    ],
    "vue/valid-v-text": Array [
      "error",
    ],
    "wrap-iife": Array [
      "error",
      "outside",
      Object {
        "functionPrototypeMethods": false,
      },
    ],
    "wrap-regex": Array [
      "off",
    ],
    "yield-star-spacing": Array [
      "error",
      "after",
    ],
    "yoda": Array [
      "error",
    ],
  },
  "settings": Object {
    "import/core-modules": Array [],
    "import/extensions": Array [
      ".js",
      ".mjs",
      ".jsx",
    ],
    "import/ignore": Array [
      "node_modules",
      "\\\\.(coffee|scss|css|less|hbs|svg|json)$",
    ],
    "import/resolver": Object {
      "node": Object {
        "extensions": Array [
          ".mjs",
          ".js",
          ".json",
        ],
      },
    },
  },
}
`;
